{"version":3,"sources":["../../src/driver/mysql/MysqlColumnTypes.ts"],"names":[],"mappings":";AAAA,4EAA4E;AAC5E,gBAAgB;AAChB,4EAA4E","file":"MysqlColumnTypes.js","sourcesContent":["// -------------------------------------------------------------------------\n// Numeric Types\n// -------------------------------------------------------------------------\n\n/**\n * A very small integer that can be signed or unsigned.\n * If signed, the allowable range is from -128 to 127.\n * If unsigned, the allowable range is from 0 to 255.\n * You can specify a width of up to 4 digits.\n */\nexport type TinyintColumnType = \"tinyint\";\n\n/**\n * A small integer that can be signed or unsigned.\n * If signed, the allowable range is from -32768 to 32767.\n * If unsigned, the allowable range is from 0 to 65535.\n * You can specify a width of up to 5 digits.\n */\nexport type SmallintColumnType = \"smallint\";\n\n/**\n * A medium-sized integer that can be signed or unsigned.\n * If signed, the allowable range is from -8388608 to 8388607.\n * If unsigned, the allowable range is from 0 to 16777215.\n * You can specify a width of up to 9 digits.\n */\nexport type MediumintColumnType = \"mediumint\";\n\n/**\n * A normal-sized integer that can be signed or unsigned.\n * If signed, the allowable range is from -2147483648 to 2147483647.\n * If unsigned, the allowable range is from 0 to 4294967295.\n * You can specify a width of up to 11 digits.\n */\nexport type IntegerColumnType = \"int\";\n\n/**\n * A large integer that can be signed or unsigned.\n * If signed, the allowable range is from -9223372036854775808 to 9223372036854775807.\n * If unsigned, the allowable range is from 0 to 18446744073709551615.\n * You can specify a width of up to 20 digits.\n */\nexport type BigintColumnType = \"bigint\";\n\n/**\n * A floating-point number that cannot be unsigned.\n * You can define the display length (M) and the number of decimals (D).\n * This is not required and will default to 10,2,\n * where 2 is the number of decimals and 10 is the total number of digits (including decimals).\n * Decimal precision can go to 24 places for a FLOAT.\n */\nexport type FloatColumnType = \"float\";\n\n/**\n * A double precision floating-point number that cannot be unsigned.\n * You can define the display length (M) and the number of decimals (D).\n * This is not required and will default to 16,4, where 4 is the number of decimals.\n * Decimal precision can go to 53 places for a DOUBLE. REAL is a synonym for DOUBLE.\n */\nexport type DoubleColumnType = \"real\"|\"double\";\n\n/**\n * An unpacked floating-point number that cannot be unsigned.\n * In unpacked decimals, each decimal corresponds to one byte.\n * Defining the display length (M) and the number of decimals (D) is required.\n * NUMERIC is a synonym for DECIMAL.\n */\nexport type DecimalColumnType = \"numeric\"|\"decimal\";\n\n// -------------------------------------------------------------------------\n// Character Types\n// -------------------------------------------------------------------------\n\n/**\n * A variable-length string between 1 and 255 characters in length; for example VARCHAR(25).\n * You must define a length when creating a VARCHAR field.\n */\nexport type VarcharColumnType = \"varchar\";\n\n/**\n * A fixed-length string between 1 and 255 characters in length (for example CHAR(5)),\n * right-padded with spaces to the specified length when stored.\n * Defining a length is not required, but the default is 1.\n */\nexport type CharColumnType = \"char\";\n\n/**\n * A BLOB or TEXT column with a maximum length of 255 characters.\n * You do not specify a length with TINYBLOB or TINYTEXT.\n */\nexport type TinyTextColumnType = \"tinyblob\"|\"tinytext\";\n\n/**\n * A BLOB or TEXT column with a maximum length of 16777215 characters.\n * You do not specify a length with MEDIUMBLOB or MEDIUMTEXT.\n */\nexport type MediumTextColumnType = \"mediumblob\"|\"mediumtext\";\n\n/**\n * A field with a maximum length of 65535 characters.\n * BLOBs are \"Binary Large Objects\" and are used to store large amounts of binary data, such as images or other types of files.\n * Fields defined as TEXT also hold large amounts of data;\n * the difference between the two is that sorts and comparisons on stored data are case sensitive on BLOBs and are not case sensitive in TEXT fields.\n * You do not specify a length with BLOB or TEXT.\n */\nexport type TextColumnType = \"blob\"|\"text\";\n\n/**\n * A BLOB or TEXT column with a maximum length of 4294967295 characters.\n * You do not specify a length with LONGBLOB or LONGTEXT.\n */\nexport type LongTextColumnType = \"longblob\"|\"longtext\";\n\n// -------------------------------------------------------------------------\n// Date/Time Types\n// -------------------------------------------------------------------------\n\n/**\n * A date in YYYY-MM-DD format, between 1000-01-01 and 9999-12-31.\n * For example, December 30th, 1973 would be stored as 1973-12-30.\n */\nexport type DateColumnType = \"date\";\n\n/**\n * A date and time combination in YYYY-MM-DD HH:MM:SS format,\n * between 1000-01-01 00:00:00 and 9999-12-31 23:59:59.\n * For example, 3:30 in the afternoon on December 30th, 1973 would be stored as 1973-12-30 15:30:00.\n */\nexport type DatetimeColumnType = \"datetime\";\n\n/**\n * A timestamp between midnight, January 1, 1970 and sometime in 2037.\n * This looks like the previous DATETIME format, only without the hyphens between numbers;\n * 3:30 in the afternoon on December 30th, 1973 would be stored as 19731230153000 ( YYYYMMDDHHMMSS ).\n */\nexport type TimestampColumnType = \"timestamp\";\n\n/**\n * Stores the time in HH:MM:SS format.\n */\nexport type TimeColumnType = \"time\";\n\n/**\n * Stores a year in 2-digit or 4-digit format.\n * If the length is specified as 2 (for example YEAR(2)), YEAR can be 1970 to 2069 (70 to 69).\n * If the length is specified as 4, YEAR can be 1901 to 2155.\n * The default length is 4.\n */\nexport type YearColumnType = \"year\";\n\n// -------------------------------------------------------------------------\n// Enumerated Type\n// -------------------------------------------------------------------------\n\n/**\n * An enumeration, which is a fancy term for list.\n * When defining an ENUM, you are creating a list of items from which the value must be selected (or it can be NULL).\n * For example, if you wanted your field to contain \"A\" or \"B\" or \"C\",\n * you would define your ENUM as ENUM ('A', 'B', 'C') and only those values (or NULL) could ever populate that field.\n */\nexport type EnumColumnType = \"enum\";\n\n// -------------------------------------------------------------------------\n// Merged Types\n// -------------------------------------------------------------------------\n\n/**\n * Column types where column length is used.\n */\nexport type WithLengthColumnType =\n    VarcharColumnType|\n    CharColumnType|\n    YearColumnType;\n\n/**\n * Column types where precision is used.\n */\nexport type NumericColumnType =\n    FloatColumnType|\n    DoubleColumnType|\n    DecimalColumnType;\n\n/**\n * Column types where time options are used.\n */\nexport type WithTimeColumnType =\n    DatetimeColumnType|\n    TimestampColumnType;\n\n/**\n * All other column types without extra options used.\n */\nexport type SimpleColumnType =\n    TinyintColumnType|\n    SmallintColumnType|\n    MediumintColumnType|\n    IntegerColumnType|\n    BigintColumnType|\n    TinyTextColumnType|\n    MediumTextColumnType|\n    TextColumnType|\n    LongTextColumnType|\n    DateColumnType|\n    TimeColumnType;\n\n/**\n * All column types supported by a database.\n */\nexport type AllColumnType =\n    SimpleColumnType|\n    WithLengthColumnType|\n    NumericColumnType|\n    WithTimeColumnType|\n    EnumColumnType;"],"sourceRoot":"../.."}