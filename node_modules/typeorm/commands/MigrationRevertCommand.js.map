{"version":3,"sources":["../../src/commands/MigrationRevertCommand.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kCAA0C;AAC1C,iFAA8E;AAE9E;;GAEG;AACH;IAAA;QAEI,YAAO,GAAG,mBAAmB,CAAC;QAC9B,aAAQ,GAAG,kCAAkC,CAAC;IAyClD,CAAC;IAvCG,wCAAO,GAAP,UAAQ,KAAU;QACd,MAAM,CAAC,KAAK;aACP,MAAM,CAAC,GAAG,EAAE;YACT,KAAK,EAAE,YAAY;YACnB,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,8CAA8C;SAC3D,CAAC;aACD,MAAM,CAAC,IAAI,EAAE;YACV,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,WAAW;YACpB,QAAQ,EAAE,iDAAiD;SAC9D,CAAC,CAAC;IACX,CAAC;IAEK,wCAAO,GAAb,UAAc,IAAS;;gBAKT,uBAAuB;;;;;wBAF7B,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC,CAAC,mDAAmD;wBAC5F,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,IAAI,CAAC,CAAC,mDAAmD;kDAChE,IAAI,iDAAuB,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;wBACnF,qBAAM,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAA;;4CAAlD,SAAkD;wBACzD,qBAAM,wBAAgB,CAAC,iBAAiB,CAAC,EAAA;;qCAAzC,SAAyC;;;;wBAGxD,qBAAM,UAAU,CAAC,iBAAiB,EAAE,EAAA;;wBAApC,SAAoC,CAAC;;;;wBAGrC,OAAO,CAAC,KAAK,CAAC,KAAG,CAAC,CAAC;;4BAGnB,qBAAM,UAAU,CAAC,KAAK,EAAE,EAAA;;wBAAxB,SAAwB,CAAC;;;;;wBAI7B,OAAO,CAAC,KAAK,CAAC,KAAG,CAAC,CAAC;;;;;;KAG1B;IAEL,6BAAC;AAAD,CA5CA,AA4CC,IAAA;AA5CY,wDAAsB","file":"MigrationRevertCommand.js","sourcesContent":["import {createConnection} from \"../index\";\nimport {ConnectionOptionsReader} from \"../connection/ConnectionOptionsReader\";\n\n/**\n * Reverts last migration command.\n */\nexport class MigrationRevertCommand {\n\n    command = \"migrations:revert\";\n    describe = \"Reverts last executed migration.\";\n\n    builder(yargs: any) {\n        return yargs\n            .option(\"c\", {\n                alias: \"connection\",\n                default: \"default\",\n                describe: \"Name of the connection on which run a query.\"\n            })\n            .option(\"cf\", {\n                alias: \"config\",\n                default: \"ormconfig\",\n                describe: \"Name of the file with connection configuration.\"\n            });\n    }\n\n    async handler(argv: any) {\n\n        try {\n            process.env.SKIP_SCHEMA_CREATION = true; // todo: maybe simply re-assign connection options?\n            process.env.SKIP_SUBSCRIBERS_LOADING = true; // todo: maybe simply re-assign connection options?\n            const connectionOptionsReader = new ConnectionOptionsReader({ root: process.cwd(), configName: argv.config });\n            const connectionOptions = await connectionOptionsReader.get(argv.connection);\n            const connection = await createConnection(connectionOptions);\n\n            try {\n                await connection.undoLastMigration();\n\n            } catch (err) {\n                console.error(err);\n\n            } finally {\n                await connection.close();\n            }\n\n        } catch (err) {\n            console.error(err);\n            // throw err;\n        }\n    }\n\n}"],"sourceRoot":".."}