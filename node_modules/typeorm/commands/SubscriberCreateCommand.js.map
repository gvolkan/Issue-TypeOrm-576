{"version":3,"sources":["../../src/commands/SubscriberCreateCommand.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,iFAA8E;AAC9E,+CAA4C;AAC5C,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEjC;;GAEG;AACH;IAAA;QACI,YAAO,GAAG,mBAAmB,CAAC;QAC9B,aAAQ,GAAG,6BAA6B,CAAC;IA6D7C,CAAC;IA3DG,yCAAO,GAAP,UAAQ,KAAU;QACd,MAAM,CAAC,KAAK;aACP,MAAM,CAAC,GAAG,EAAE;YACT,KAAK,EAAE,YAAY;YACnB,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,gDAAgD;SAC7D,CAAC;aACD,MAAM,CAAC,GAAG,EAAE;YACT,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE,+BAA+B;YACzC,MAAM,EAAE,IAAI;SACf,CAAC;aACD,MAAM,CAAC,GAAG,EAAE;YACT,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,+CAA+C;SAC5D,CAAC;aACD,MAAM,CAAC,IAAI,EAAE;YACV,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,WAAW;YACpB,QAAQ,EAAE,iDAAiD;SAC9D,CAAC,CAAC;IACX,CAAC;IAEK,yCAAO,GAAb,UAAc,IAAS;;gBACb,WAAW,EACX,QAAQ,EACV,SAAS,EAKC,uBAAuB,4BAM/B,IAAI;;;;sCAbU,uBAAuB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;mCACjD,IAAI,CAAC,IAAI,GAAG,KAAK;oCAClB,IAAI,CAAC,GAAG;6BAGpB,CAAC,SAAS,EAAV,wBAAU;;;;kDAE0B,IAAI,iDAAuB,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;wBACnF,qBAAM,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAA;;4CAAlD,SAAkD;wBAC5E,SAAS,GAAG,iBAAiB,CAAC,GAAG,GAAG,iBAAiB,CAAC,GAAG,CAAC,cAAc,GAAG,SAAS,CAAC;;;;;;+BAIhF,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ;wBAClF,qBAAM,2BAAY,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC,EAAA;;wBAAhD,SAAgD,CAAC;wBACjD,OAAO,CAAC,GAAG,CAAC,kBAAe,IAAI,sCAAkC,CAAC,CAAC;;;;;KACtE;IAED,4EAA4E;IAC5E,2BAA2B;IAC3B,4EAA4E;IAE5E;;OAEG;IACc,mCAAW,GAA5B,UAA6B,IAAY;QACrC,MAAM,CAAC,+GAGA,IAAI,wDAGlB,CAAC;IACE,CAAC;IAEL,8BAAC;AAAD,CA/DA,AA+DC,IAAA;AA/DY,0DAAuB","file":"SubscriberCreateCommand.js","sourcesContent":["import * as fs from \"fs\";\nimport {ConnectionOptionsReader} from \"../connection/ConnectionOptionsReader\";\nimport {CommandUtils} from \"./CommandUtils\";\nconst mkdirp = require(\"mkdirp\");\n\n/**\n * Generates a new subscriber.\n */\nexport class SubscriberCreateCommand {\n    command = \"subscriber:create\";\n    describe = \"Generates a new subscriber.\";\n\n    builder(yargs: any) {\n        return yargs\n            .option(\"c\", {\n                alias: \"connection\",\n                default: \"default\",\n                describe: \"Name of the connection on which to run a query\"\n            })\n            .option(\"n\", {\n                alias: \"name\",\n                describe: \"Name of the subscriber class.\",\n                demand: true\n            })\n            .option(\"d\", {\n                alias: \"dir\",\n                describe: \"Directory where subscriber should be created.\"\n            })\n            .option(\"cf\", {\n                alias: \"config\",\n                default: \"ormconfig\",\n                describe: \"Name of the file with connection configuration.\"\n            });\n    }\n\n    async handler(argv: any) {\n        const fileContent = SubscriberCreateCommand.getTemplate(argv.name);\n        const filename = argv.name + \".ts\";\n        let directory = argv.dir;\n\n        // if directory is not set then try to open tsconfig and find default path there\n        if (!directory) {\n            try {\n                const connectionOptionsReader = new ConnectionOptionsReader({ root: process.cwd(), configName: argv.config });\n                const connectionOptions = await connectionOptionsReader.get(argv.connection);\n                directory = connectionOptions.cli ? connectionOptions.cli.subscribersDir : undefined;\n            } catch (err) { }\n        }\n\n        const path = process.cwd() + \"/\" + (directory ? (directory + \"/\") : \"\") + filename;\n        await CommandUtils.createFile(path, fileContent);\n        console.log(`Subscriber \"${path}\" has been created successfully.`);\n    }\n\n    // -------------------------------------------------------------------------\n    // Protected Static Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Gets contents of the entity file.\n     */\n    protected static getTemplate(name: string): string {\n        return `import {EventSubscriber, EntitySubscriberInterface} from \"typeorm\";\n\n@EventSubscriber()\nexport class ${name} implements EntitySubscriberInterface<any> {\n\n}\n`;\n    }\n\n}"],"sourceRoot":".."}